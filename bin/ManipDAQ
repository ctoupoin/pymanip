#! /usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import unicode_literals, print_function, division
import sys, os

from PyQt4 import QtGui, QtCore, uic

from matplotlib.backends.backend_qt4agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt4agg import NavigationToolbar2QT as NavigationToolbar
from matplotlib.figure import Figure

import numpy as np

from pymanip.daq.DAQmx import DAQDevice

# Load the GUI info
directory = os.path.dirname(os.path.realpath(__file__))
DaqUi = uic.loadUiType(directory + '/DAQ.ui')[0]

class DaqWindow(QtGui.QMainWindow, DaqUi):
    def __init__(self, app):
        super(DaqWindow, self).__init__()
        self.app = app

        # User settings
        self.settings = QtCore.QSettings('pymanip', 'ManipDAQ')

        # Create layout
        self.setupUi(self)

        # Create matplotlib canvas
        self.figure_t = Figure()
        self.canvas_t = FigureCanvas(self.figure_t)
        self.toolbar_t = NavigationToolbar(self.canvas_t, self)
        self.figure_f = Figure()
        self.canvas_f = FigureCanvas(self.figure_f)
        self.toolbar_f = NavigationToolbar(self.canvas_f, self)
        self.plot_layout.addWidget(self.toolbar_t)
        self.plot_layout.addWidget(self.canvas_t)
        self.plot_layout.addWidget(self.toolbar_f)
        self.plot_layout.addWidget(self.canvas_f)

        # Populate device list
        for dev in DAQDevice.list_connected_devices():
            self.device_ui.addItem(dev.device_name)
        self.update_channel_properties()

        # Show window
        self.show()
        self.raise_()

    def update_channel_properties(self):
        selected_device = unicode(self.device_ui.currentText())
        self.channel_ui.clear()
        if selected_device:
            dev = DAQDevice(selected_device)
            self.channel_ui.addItems(dev.ai_chans)
    
def main():
    app = QtGui.QApplication(sys.argv)
    daq_window = DaqWindow(app)
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
        
