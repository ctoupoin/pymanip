#! /usr/bin/env python
"""
This program computes the values of resistor in a bridge
from the table of measured branches.
"""

import sys
import numpy as np
import h5py

from pymanip.wheatstone import compute_bridge, row_format, print_tableau

def main(tableau, verbose, output):
    (R1, R2, R3, R4) = compute_bridge(tableau, verbose)
    if output is not None:
        print 'Saving data into', output
        with h5py.File(output, 'w') as f:
            f.create_dataset('sweep', data=tableau)
            f.create_dataset('R1', data=R1)
            f.create_dataset('R2', data=R2)
            f.create_dataset('R3', data=R3)
            f.create_dataset('R4', data=R4)
                
if __name__ == '__main__':
    from argparse import ArgumentParser
    parser = ArgumentParser(description=__doc__)
    parser.add_argument('-f', '--file', help="file containing sweep data")
    parser.add_argument('-o', '--output', help="output file to save sweep data")
    parser.add_argument('-q', '--quiet', action='store_true', help="do not print results")
    args = parser.parse_args()
    
    if args.file == None:
        print 'Please input sweep data:'
        try:
            AB = float(raw_input('AB = '))
            AE = float(raw_input('AE = '))
            AM = float(raw_input('AM = '))
            BE = float(raw_input('BE = '))
            BM = float(raw_input('BM = '))
            EM = float(raw_input('EM = '))
        except KeyboardInterrupt:
            sys.exit(0)
        x = np.nan
        tableau = np.array([[x, AB, AE, AM],
                            [x,  x, BE, BM],
                            [x,  x,  x, EM],
                            [x,  x,  x,  x]])    
    else:
        with h5py.File(args.file, 'r') as f:
            tableau = f["sweep"].value
        
    main(tableau, not args.quiet, args.output)